cmake_minimum_required(VERSION 2.6)
project(pedsim_simulator)

add_definitions(-Wall -Wunused -std=c++0x -pipe) # C++ 11 is required

set( PEDSIM_SIMULATOR_DEPENDENCIES
    roscpp
    rospy
    std_msgs
    pedsim_msgs
    visualization_msgs
    animated_marker_msgs
    nav_msgs
    geometry_msgs
    tf
)

## Find catkin macros and libraries
find_package(catkin REQUIRED COMPONENTS ${PEDSIM_SIMULATOR_DEPENDENCIES})

# add qt4 to the project
find_package(Boost REQUIRED)
find_package(Qt4 REQUIRED)
find_package(Eigen REQUIRED)

catkin_package(CATKIN_DEPENDS ${PEDSIM_SIMULATOR_DEPENDENCIES})

include(${QT_USE_FILE})
include_directories(include)
include_directories(${Eigen_INCLUDE_DIRS})
include_directories(
    ${catkin_INCLUDE_DIRS}
    ${CMAKE_CURRENT_SOURCE_DIR}/3rdparty
)

set(SOURCES
	src/simulator.cpp
    src/scene.cpp
    src/config.cpp
    src/orientationhandler.cpp
    src/agentstatemachine.cpp
    src/scenarioreader.cpp
	src/rng.cpp

	# elements
	src/element/agent.cpp
	src/element/agentgroup.cpp
	src/element/agentcluster.cpp
	src/element/areawaypoint.cpp
	src/element/attractionarea.cpp
	src/element/queueingwaypoint.cpp
	src/element/waitingqueue.cpp
	src/element/waypoint.cpp
	src/element/obstacle.cpp
	src/element/scenarioelement.cpp

	# forces
	src/force/alongwallforce.cpp
	src/force/force.cpp
	src/force/groupcoherenceforce.cpp
	src/force/groupgazeforce.cpp
	src/force/grouprepulsionforce.cpp
	src/force/randomforce.cpp

	# waypointplanner
	src/waypointplanner/waypointplanner.cpp
	src/waypointplanner/individualwaypointplanner.cpp
	src/waypointplanner/queueingplanner.cpp
	src/waypointplanner/shoppingplanner.cpp
	src/waypointplanner/groupwaypointplanner.cpp
)


set(MOC_FILES
	include/pedsim_simulator/config.h
	include/pedsim_simulator/scene.h
	include/pedsim_simulator/agentstatemachine.h

	include/pedsim_simulator/element/scenarioelement.h
	include/pedsim_simulator/element/agent.h
	include/pedsim_simulator/element/agentcluster.h
	include/pedsim_simulator/element/agentgroup.h
	include/pedsim_simulator/element/attractionarea.h
	include/pedsim_simulator/element/obstacle.h
	include/pedsim_simulator/element/waypoint.h
	include/pedsim_simulator/element/areawaypoint.h
	include/pedsim_simulator/element/waitingqueue.h
	include/pedsim_simulator/element/queueingwaypoint.h

	include/pedsim_simulator/force/force.h
	include/pedsim_simulator/force/randomforce.h
	include/pedsim_simulator/force/groupgazeforce.h
	include/pedsim_simulator/force/groupcoherenceforce.h
	include/pedsim_simulator/force/grouprepulsionforce.h
	include/pedsim_simulator/force/alongwallforce.h

	include/pedsim_simulator/waypointplanner/waypointplanner.h
	include/pedsim_simulator/waypointplanner/individualwaypointplanner.h
	include/pedsim_simulator/waypointplanner/groupwaypointplanner.h
	include/pedsim_simulator/waypointplanner/shoppingplanner.h
	include/pedsim_simulator/waypointplanner/queueingplanner.h
)

# Compile the basic pedsim library
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/libpedsim)

QT4_WRAP_CPP(MOC_SRCS_UI ${MOC_FILES})


## executables
add_executable(simulator ${SOURCES} ${MOC_SRCS_UI} ${QT_RESOURCES_CPP} ${QT_FORMS_HPP} ${QT_MOC_HPP})
target_link_libraries(simulator ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY}
    pedsim ${BOOST_LIBRARIES} ${catkin_LIBRARIES}
)

add_executable(robot_teleop_keyboard src/robot_teleop_keyboard.cpp)
target_link_libraries(robot_teleop_keyboard ${BOOST_LIBRARIES} ${catkin_LIBRARIES})

add_executable(robot_teleop_joystick src/robot_teleop_joystick.cpp)
target_link_libraries(robot_teleop_joystick ${BOOST_LIBRARIES} ${catkin_LIBRARIES})

## installations
install(TARGETS simulator robot_teleop_joystick robot_teleop_keyboard
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
)


## Unit Tests
